***********ML ASSIGNMENT 4 CLASSIFICATION************
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import sys

if not sys.warnoptions:
    import warnings
    warnings.simplefilter("ignore")
#Read data in csv file store into dataframe
df = pd.read_csv('C:/Users/rutik/Desktop/ML/Admission_Predict.csv')
print(df.head(5))

#To drop the irrelevant column and check if there are any null values in the dataset
df = df.drop(['Serial No.'], axis=1)
print(df.isnull().sum())

#To see the distribution of the variables of graduate applicants. #distplot() plot distributed data as observations
fig = sns.distplot(df['GRE Score'], kde=False)
plt.title("Distribution of GRE Scores")
plt.show()


#Show TOEFL Score
fig = sns.distplot(df['TOEFL Score'], kde=False)
plt.title("Distribution of TOEFL Scores")
plt.show()


#Show University Ratings
fig = sns.distplot(df['University Rating'], kde=False)
plt.title("Distribution of University Rating")
plt.show()


#Show SOP Ratings
fig = sns.distplot(df['SOP'], kde=False)
plt.title("Distribution of SOP Ratings")
plt.show()


#Show CGPA
fig = sns.distplot(df['CGPA'], kde=False)
plt.title("Distribution of CGPA")
plt.show()


#regplot() :Plot data and a linear regression model fit.
fig = sns.regplot(x="GRE Score", y="TOEFL Score", data=df)
plt.title("GRE Score vs TOEFL Score")
plt.show()


#GRE Score vs CGPA
fig = sns.regplot(x="GRE Score", y="CGPA", data=df)
plt.title("GRE Score vs CGPA")
plt.show()


#LOR vs CGPA show wheather Research 0 or 1
fig = sns.lmplot(x="CGPA", y="LOR ", data=df, hue="Research")
plt.title("LOR vs CGPA")
plt.show()

#GRE Score vs LOR SHOW WHEATHER Research 0 or 1
fig = sns.lmplot(x="GRE Score", y="LOR ", data=df, hue="Research")
plt.title("GRE Score vs LOR")
plt.show()

#SOP vs CGPA
fig = sns.regplot(x="CGPA", y="SOP", data=df)
plt.title("SOP vs CGPA")
plt.show()

#GRE Score vs SOP
fig = sns.regplot(x="GRE Score", y="SOP", data=df)
plt.title("GRE Score vs SOP")
plt.show()

#Similary, GRE Score and CGPA is only slightly related #SOP vs TOEFL
fig = sns.regplot(x="TOEFL Score", y="SOP", data=df)
plt.title("SOP vs TOEFL")
plt.show()


#Correlation among variables
import numpy as np

corr = df.corr()
print(corr)

colormap = sns.diverging_palette(220, 10, as_cmap=True)

dropSelf = np.zeros_like(corr)


#np.triu_indices_from(dropSelf): Return indices of array
dropSelf[np.triu_indices_from(dropSelf)] = True
colormap = sns.diverging_palette(220, 10, as_cmap=True)
sns.heatmap(corr, cmap=colormap, linewidths=.5, annot=True, fmt=".2f", mask=dropSelf)
plt.show()
fromsklearn.model_selection
import train_test_split

